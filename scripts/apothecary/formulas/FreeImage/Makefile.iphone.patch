--- FreeImage/Makefile.iphone	2010-05-15 22:30:08.000000000 -0400
+++ work-FreeImage/Makefile.iphone	2013-07-02 13:27:24.000000000 -0400
@@ -1,65 +1,82 @@
-# Configuration for iPhone OS, making static libs
-# this will generate both iPhone (arm) and iPhoneSimulator (i686) libs
+# Configuration for iPhone OS, builds static libs for iOS and the iOSSimulator
+#
+# You can make a fat lib (iOS + iOSSimulator) using lipo:
+#	lipo -c libfreeimage-simulator.a libfreeimage-armv7.a -o libfreeimage.a
+#
+# Example: build & link fat lib for armv6, armv7, armv7s, & simulator
+#
+# 	make -f Makefile.iphone
+#	sed -i tmp "s|ARCH_PHONE =.*|ARCH_PHONE = armv7s|" Makefile.iphone
+#	make -f Makefile.iphone
+#	sed -i tmp "s|ARCH_PHONE =.*|ARCH_PHONE = armv6|" Makefile.iphone
+#	make -f Makefile.iphone
+#	lipo -c libfreeimage-simulator.a libfreeimage-armv6.a libfreeimage-armv7.a libfreeimage-armv7s.a -o libfreeimage.a
+#
+# patched
 
 include Makefile.srcs
 
+# Update these based on your installed SDKs
+IPHONEOS_SDK = 6.1
+IPHONEOS_MIN_SDK = 5.1
+MACOSX_SDK = 10.8
+MACOSX_MIN_SDK = 10.6
+
+# Build architectures
+ARCH_SIM = i386
+ARCH_PHONE = armv7
+
+# General configuration variables:
 CFLAGS =  -g -O2 -Wall -Wmissing-prototypes -std=c99 -ffast-math -fno-strict-aliasing
 CXXFLAGS =  -g -O2 -Wall -fno-strict-aliasing
 
-GCC_VERSION = 4.2
-IPHONEOS_DEPLOYMENT_TARGET = 4.0
-MACOSX_DEPLOYMENT_TARGET = 10.6
-
 PLATFORM_SIM = iPhoneSimulator
 PLATFORM_PHONE = iPhoneOS
 
-ARCH_SIM = i686
-ARCH_PHONE = armv6
-
-PLATFORM_SIM_DEVELOPER_BIN_DIR = /Developer/Platforms/$(PLATFORM_SIM).platform/Developer/usr/bin
-PLATFORM_PHONE_DEVELOPER_BIN_DIR = /Developer/Platforms/$(PLATFORM_PHONE).platform/Developer/usr/bin
+PLATFORM_SIM_DEVELOPER_BIN_DIR = $(shell xcode-select -print-path)/Platforms/$(PLATFORM_SIM).platform/Developer/usr/bin
+PLATFORM_PHONE_DEVELOPER_BIN_DIR = $(shell xcode-select -print-path)/Platforms/$(PLATFORM_PHONE).platform/Developer/usr/bin
 
-SDKROOT_SIM = /Developer/Platforms/$(PLATFORM_SIM).platform/Developer/SDKs/$(PLATFORM_SIM)$(IPHONEOS_DEPLOYMENT_TARGET).sdk
-SDKROOT_PHONE = /Developer/Platforms/$(PLATFORM_PHONE).platform/Developer/SDKs/$(PLATFORM_PHONE)$(IPHONEOS_DEPLOYMENT_TARGET).sdk
+SDKROOT_SIM = $(shell xcode-select -print-path)/Platforms/$(PLATFORM_SIM).platform/Developer/SDKs/$(PLATFORM_SIM)$(IPHONEOS_SDK).sdk
+SDKROOT_PHONE = $(shell xcode-select -print-path)/Platforms/$(PLATFORM_PHONE).platform/Developer/SDKs/$(PLATFORM_PHONE)$(IPHONEOS_SDK).sdk
 
-EXTRA_CFLAGS_SIM += -arch $(ARCH_SIM) -pipe -mdynamic-no-pic -fvisibility=hidden $(INCLUDE) -isysroot $(SDKROOT_SIM)
-EXTRA_LDFLAGS_SIM += -arch $(ARCH_SIM) -isysroot $(SDKROOT_SIM) -Wl,-dead_strip
-EXTRA_CFLAGS_SIM += -D__IPHONE_OS_VERSION_MIN_REQUIRED=20000 -mmacosx-version-min=$(MACOSX_DEPLOYMENT_TARGET)
-EXTRA_LDFLAGS_SIM += -mmacosx-version-min=$(MACOSX_DEPLOYMENT_TARGET)
-
-EXTRA_CFLAGS_PHONE += -arch $(ARCH_PHONE) -pipe -mdynamic-no-pic -fvisibility=hidden $(INCLUDE) -isysroot $(SDKROOT_PHONE)
-EXTRA_LDFLAGS_PHONE += -arch $(ARCH_PHONE) -isysroot $(SDKROOT_PHONE) -Wl,-dead_strip
-EXTRA_CFLAGS_PHONE += -miphoneos-version-min=$(IPHONEOS_DEPLOYMENT_TARGET)
-EXTRA_LDFLAGS_PHONE += -miphoneos-version-min=$(IPHONEOS_DEPLOYMENT_TARGET)
+EXTRA_CFLAGS_SIM += -pipe -mdynamic-no-pic -fvisibility=hidden $(INCLUDE) -isysroot $(SDKROOT_SIM)
+EXTRA_LDFLAGS_SIM += -isysroot $(SDKROOT_SIM) -Wl,-dead_strip
+EXTRA_CFLAGS_SIM += -D__IPHONE_OS_VERSION_MIN_REQUIRED=50000 -mmacosx-version-min=$(MACOSX_MIN_SDK)
+EXTRA_LDFLAGS_SIM += -mmacosx-version-min=$(MACOSX_MIN_SDK)
+
+EXTRA_CFLAGS_PHONE += -pipe -mdynamic-no-pic -fvisibility=hidden $(INCLUDE) -isysroot $(SDKROOT_PHONE)
+EXTRA_LDFLAGS_PHONE += -isysroot $(SDKROOT_PHONE) -Wl,-dead_strip
+EXTRA_CFLAGS_PHONE += -miphoneos-version-min=$(IPHONEOS_MIN_SDK)
+EXTRA_LDFLAGS_PHONE += -miphoneos-version-min=$(IPHONEOS_MIN_SDK)
 
 AR_SIM = $(PLATFORM_SIM_DEVELOPER_BIN_DIR)/ar
 AR_PHONE = $(PLATFORM_PHONE_DEVELOPER_BIN_DIR)/ar
 
-CC_SIM = $(PLATFORM_SIM_DEVELOPER_BIN_DIR)/gcc-$(GCC_VERSION)
-CC_PHONE = $(PLATFORM_PHONE_DEVELOPER_BIN_DIR)/gcc-$(GCC_VERSION)
+CC_SIM = $(PLATFORM_SIM_DEVELOPER_BIN_DIR)/llvm-gcc
+CC_PHONE = $(PLATFORM_PHONE_DEVELOPER_BIN_DIR)/llvm-gcc
 
 CFLAGS_SIM = $(CFLAGS) $(EXTRA_CFLAGS_SIM)
 LDFLAGS_SIM = $(EXTRA_LDFLAGS_SIM)
-CXX_SIM = $(PLATFORM_SIM_DEVELOPER_BIN_DIR)/g++-$(GCC_VERSION)
+CXX_SIM = $(PLATFORM_SIM_DEVELOPER_BIN_DIR)/llvm-g++
 CXXFLAGS_SIM += $(EXTRA_CFLAGS_SIM) -fvisibility-inlines-hidden
-LIBTOOL_SIM = /Developer/Platforms/$(PLATFORM_SIM).platform/Developer/usr/bin/libtool
+LIBTOOL_SIM = $(shell xcode-select -print-path)/Platforms/$(PLATFORM_SIM).platform/Developer/usr/bin/libtool
 
 CFLAGS_PHONE = $(CFLAGS) $(EXTRA_CFLAGS_PHONE)
 LDFLAGS_PHONE += $(EXTRA_LDFLAGS_PHONE)
-CXX_PHONE = $(PLATFORM_PHONE_DEVELOPER_BIN_DIR)/g++-$(GCC_VERSION)
+CXX_PHONE = $(PLATFORM_PHONE_DEVELOPER_BIN_DIR)/llvm-g++
 CXXFLAGS_PHONE += $(EXTRA_CFLAGS_PHONE) -fvisibility-inlines-hidden
-LIBTOOL_PHONE = /Developer/Platforms/$(PLATFORM_PHONE).platform/Developer/usr/bin/libtool
+LIBTOOL_PHONE = $(shell xcode-select -print-path)/Platforms/$(PLATFORM_PHONE).platform/Developer/usr/bin/libtool
 
 TARGET = freeimage
-STATICLIB_SIM = lib$(TARGET)-iphonesimulator.a
-STATICLIB_PHONE = lib$(TARGET)-iphone.a
+STATICLIB_SIM = lib$(TARGET)-simulator.a
+STATICLIB_PHONE = lib$(TARGET)-$(ARCH_PHONE).a
 HEADER = Source/FreeImage.h
 
-.SUFFIXES: .o-i686 .o-arm
-MODULES_ARM = $(SRCS:.c=.o-arm)
-MODULES_ARM := $(MODULES_ARM:.cpp=.o-arm)
-MODULES_i686 = $(SRCS:.c=.o-i686)
-MODULES_i686 := $(MODULES_i686:.cpp=.o-i686)
+.SUFFIXES: .o-simulator .o-$(ARCH_PHONE)
+MODULES_PHONE = $(SRCS:.c=.o-$(ARCH_PHONE))
+MODULES_PHONE := $(MODULES_PHONE:.cpp=.o-$(ARCH_PHONE))
+MODULES_SIM = $(SRCS:.c=.o-simulator)
+MODULES_SIM := $(MODULES_SIM:.cpp=.o-simulator)
 
 default: all
 
@@ -71,23 +88,23 @@
 
 FreeImage: $(STATICLIB_SIM) $(STATICLIB_PHONE)
 
-$(STATICLIB_SIM): $(MODULES_i686)
-	$(LIBTOOL_SIM) -arch_only i686 -o $@ $(MODULES_i686)
+$(STATICLIB_SIM): $(MODULES_SIM)
+	$(LIBTOOL_SIM) -arch_only $(ARCH_SIM) -o $@ $(MODULES_SIM)
 
-.c.o-i686:
-	$(CC_SIM) $(CFLAGS_SIM) -c $< -o $@
+.c.o-simulator:
+	$(CC_SIM) -arch $(ARCH_SIM) $(CFLAGS_SIM) -c $< -o $@
 
-.cpp.o-i686:
-	$(CXX_SIM) $(CXXFLAGS_SIM) -c $< -o $@
+.cpp.o-simulator:
+	$(CXX_SIM) -arch $(ARCH_SIM) $(CXXFLAGS_SIM) -c $< -o $@
 
-$(STATICLIB_PHONE): $(MODULES_ARM)
-	$(LIBTOOL_PHONE) -arch_only armv6 -o $@ $(MODULES_ARM)
+$(STATICLIB_PHONE): $(MODULES_PHONE)
+	$(LIBTOOL_PHONE) -arch_only $(ARCH_PHONE) -o $@ $(MODULES_PHONE)
 
-.c.o-arm:
-	$(CC_PHONE) $(CFLAGS_PHONE) -c $< -o $@
+.c.o-$(ARCH_PHONE):
+	$(CC_PHONE) -arch $(ARCH_PHONE) $(CFLAGS_PHONE) -c $< -o $@
 
-.cpp.o-arm:
-	$(CXX_PHONE) $(CXXFLAGS_PHONE) -c $< -o $@
+.cpp.o-$(ARCH_PHONE):
+	$(CXX_PHONE) -arch $(ARCH_PHONE) $(CXXFLAGS_PHONE) -c $< -o $@
 
 clean:
-	rm -f core Dist/*.* u2dtmp* $(MODULES_i686) $(MODULES_ARM) $(STATICLIB_SIM) $(STATICLIB_PHONE)
+	rm -f core Dist/*.* u2dtmp* $(MODULES_SIM) $(MODULES_PHONE) $(STATICLIB_SIM) $(STATICLIB_PHONE)
