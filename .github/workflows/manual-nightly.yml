name: manual-nightly

on: 
  workflow_dispatch:
    inputs:
          release:
            description: 'release'     
            required: true
            default: 'nightly'  
jobs:
  manual-nightly:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          cfg:
          - {target: linux64, libs: 64gcc6}
    steps:
    - name: Install libunwind
      run:  sudo apt-get install libunwind-dev    
    - name: Cache Packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: make curl libjack-jackd2-0 libjack-jackd2-dev freeglut3-dev libasound2-dev libxmu-dev libxxf86vm-dev g++ libgl1-mesa-dev libglu1-mesa-dev libraw1394-dev libudev-dev libdrm-dev libglew-dev libopenal-dev libsndfile1-dev libfreeimage-dev libcairo2-dev libfreetype6-dev libssl-dev libpulse-dev libusb-1.0-0-dev libgtk2.0-dev libopencv-dev libassimp-dev librtaudio-dev gdb libglfw3-dev liburiparser-dev libcurl4-openssl-dev libpugixml-dev libgconf-2-4 libgtk2.0-0 libpoco-dev libxcursor-dev libxi-dev libxinerama-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-libav gstreamer1.0-pulseaudio gstreamer1.0-x gstreamer1.0-plugins-bad gstreamer1.0-alsa gstreamer1.0-plugins-base gstreamer1.0-plugins-good
        # libunwind-dev
        version: 1.0

    - uses: actions/checkout@v4
    - name: Install dependencies
      run: ./scripts/ci/${{matrix.cfg.target}}/install.sh;
    - name: Download libs
      run: ./scripts/linux/download_libs.sh -a ${{matrix.cfg.libs}};
    - name: Create Package
      run: scripts/ci/package_builds.sh ${{ github.event.inputs.release }};
      id: createpackage
    - name: Update Release
      uses: IsaacShelton/update-existing-release@v1.3.4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.event.inputs.release }}
        release: ${{ github.event.inputs.release }}
        prerelease: false
        replace: true
        files: ${{ steps.createpackage.outputs.FILES_OUT }}
