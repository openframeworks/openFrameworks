name: build-linux-arm

# make the action not run on the local repo if the branch is also in a pull request to OF/OF
on:
  push:
    if: github.event_name == 'push' && github.event.pull_request == null
    paths-ignore:
    - '**/*.md'
    - 'examples/**'
  pull_request:
    if: github.event_name == 'pull_request' && github.repository == 'openframeworks/openFrameworks'
    paths-ignore:
      - '**/*.md'
      - 'examples/**'

env:
  ccache: ccache

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux-arm-platforms:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          cfg:
          # - {target: linuxarmv6l, libs: armv6l}
          # - {target: linuxaarch64, libs: aarch64}
          - { libs: armv6l, multistrap_arch: armhf }
          - { libs: aarch64,  multistrap_arch: arm64 }
    env:
     ARCH: ${{matrix.cfg.libs}}
     MULTISTRAP_ARCH: ${{matrix.cfg.multistrap_arch}}
    steps:
    - name: Cache Packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: multistrap unzip gcc-aarch64-linux-gnu g++-aarch64-linux-gnu gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
        version: 1.0

    - uses: actions/checkout@v4

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.12
      with:
        key: ${{ matrix.cfg.libs }}

    - name: Download libs
      run: ./scripts/linux/download_libs.sh -a ${{matrix.cfg.libs}};
    - name: Install dependencies
      run: ./scripts/ci/linux${{matrix.cfg.libs}}/install.sh;
    - name: Build
      run: ./scripts/ci/linux${{matrix.cfg.libs}}/build.sh;
