//
// FIFOStrategy.h
//
// $Id: //poco/1.4/Foundation/include/Poco/FIFOStrategy.h#3 $
//
// Library: Foundation
// Package: Events
// Module:  FIFOStragegy
//
// Implementation of the FIFOStrategy template.
//
// Copyright (c) 2006-2011, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef Foundation_FIFOStrategy_INCLUDED
#define Foundation_FIFOStrategy_INCLUDED


#include "Poco/DefaultStrategy.h"


namespace Poco {


//@ deprecated
template <class TArgs, class TDelegate> 
class FIFOStrategy: public DefaultStrategy<TArgs, TDelegate>
	/// Note: As of release 1.4.2, DefaultStrategy already 
	/// implements FIFO behavior, so this class is provided
	/// for backwards compatibility only.
{
public:
	FIFOStrategy()
	{
	}

	FIFOStrategy(const FIFOStrategy& s):
		DefaultStrategy<TArgs, TDelegate>(s)
	{
	}

	~FIFOStrategy()
	{
	}

	FIFOStrategy& operator = (const FIFOStrategy& s)
	{
		DefaultStrategy<TArgs, TDelegate>::operator = (s);
		return *this;
	}
};


} // namespace Poco


#endif // Foundation_FIFOStrategy_INCLUDED
