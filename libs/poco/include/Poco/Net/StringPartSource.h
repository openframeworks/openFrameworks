//
// StringPartSource.h
//
// $Id: //poco/1.4/Net/include/Poco/Net/StringPartSource.h#1 $
//
// Library: Net
// Package: Messages
// Module:  StringPartSource
//
// Definition of the StringPartSource class.
//
// Copyright (c) 2005-2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef Net_StringPartSource_INCLUDED
#define Net_StringPartSource_INCLUDED


#include "Poco/Net/Net.h"
#include "Poco/Net/PartSource.h"
#include <sstream>


namespace Poco {
namespace Net {


class Net_API StringPartSource: public PartSource
	/// An implementation of PartSource for strings.
{
public:
	StringPartSource(const std::string& str);
		/// Creates the StringPartSource for the given string.
		///
		/// The MIME type is set to text/plain.
	
	StringPartSource(const std::string& str, const std::string& mediaType);
		/// Creates the StringPartSource for the given
		/// string and MIME type.

	StringPartSource(const std::string& str, const std::string& mediaType, const std::string& filename);
		/// Creates the StringPartSource for the given
		/// string, MIME type and filename.

	~StringPartSource();
		/// Destroys the StringPartSource.

	std::istream& stream();
		/// Returns a string input stream for the string.
		
	const std::string& filename();
		/// Returns the filename portion of the path.

private:
	std::istringstream _istr;
	std::string        _filename;
	
	StringPartSource(const StringPartSource&);
	StringPartSource& operator = (const StringPartSource&);
};


} } // namespace Poco::Net


#endif // Net_StringPartSource_INCLUDED
