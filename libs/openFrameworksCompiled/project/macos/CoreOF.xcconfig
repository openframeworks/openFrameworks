// define which C++ library is required to build, based on target architecture
CLANG_CXX_LIBRARY = libc++
CLANG_ENABLE_OBJC_ARC = YES
CLANG_CXX_LANGUAGE_STANDARD = c++17
MACOSX_DEPLOYMENT_TARGET = 10.15

MISC_FLAGS = "-ObjC"


HEADER_OF = "$(OF_PATH)/libs/openFrameworks/**"
HEADER_FREETYPE = "$(OF_PATH)/libs/freetype/include"
HEADER_FREETYPE2 = "$(OF_PATH)/libs/freetype/include/freetype"
HEADER_FMOD = "$(OF_PATH)/libs/fmod/include"
HEADER_GLEW = "$(OF_PATH)/libs/glew/include"
HEADER_FREEIMAGE = "$(OF_PATH)/libs/FreeImage/include"
HEADER_TESS2 = "$(OF_PATH)/libs/tess2/include"
HEADER_CAIRO = "$(OF_PATH)/libs/cairo/include/cairo"
HEADER_RTAUDIO = "$(OF_PATH)/libs/rtAudio/include"
HEADER_GLFW = "$(OF_PATH)/libs/glfw/include"
HEADER_UTF8 = "$(OF_PATH)/libs/utf8/include"
HEADER_JSON = "$(OF_PATH)/libs/json/include"
HEADER_GLM = "$(OF_PATH)/libs/glm/include"
HEADER_CURL = ""
HEADER_URIPARSER = "$(OF_PATH)/libs/uriparser/include"
HEADER_PUGIXML = "$(OF_PATH)/libs/pugixml/include"

//------- Libraries
LIB_OF = "$(OF_PATH)/libs/openFrameworksCompiled/lib/macos/openFrameworks.a"
LIB_OF_DEBUG = "$(OF_PATH)/libs/openFrameworksCompiled/lib/macos/openFrameworksDebug.a"

//LIB_FMOD = "$(OF_PATH)/libs/fmod/lib/osx/libfmod.dylib"
//LIB_GLFW = "$(OF_PATH)/libs/glfw/lib/osx/glfw3.a"
//LIB_FREEIMAGE = "$(OF_PATH)/libs/FreeImage/lib/osx/freeimage.a"
//LIB_FREETYPE = "$(OF_PATH)/libs/freetype/lib/osx/freetype.a"
//LIB_GLEW = "$(OF_PATH)/libs/glew/lib/osx/glew.a"
//LIB_RTAUDIO = "$(OF_PATH)/libs/rtAudio/lib/osx/rtaudio.a"
//LIB_TESS = "$(OF_PATH)/libs/tess2/lib/osx/tess2.a"
//LIB_CAIRO1 = "$(OF_PATH)/libs/cairo/lib/osx/cairo-script-interpreter.a"
//LIB_CAIRO2 = "$(OF_PATH)/libs/cairo/lib/osx/cairo.a"
//LIB_CAIRO3 = "$(OF_PATH)/libs/cairo/lib/osx/pixman-1.a"
//LIB_CURL = "-lcurl"
//LIB_URIPARSER = "$(OF_PATH)/libs/uriparser/lib/osx/uriparser.a"
//LIB_PUGIXML = "$(OF_PATH)/libs/pugixml/lib/osx/pugixml.a"


OF_CORE_LIBS = $(MISC_FLAGS)
//$(LIB_FMOD)

OF_CORE_HEADERS = $(HEADER_OF) $(HEADER_FREEIMAGE)  $(HEADER_UTF8) $(HEADER_JSON) $(HEADER_GLM) $(HEADER_FMOD)
//$(HEADER_TESS2) $(HEADER_CAIRO) $(HEADER_RTAUDIO) $(HEADER_GLFW) $(HEADER_FREETYPE) $(HEADER_FREETYPE2) $(HEADER_CURL) $(HEADER_URIPARSER) $(HEADER_PUGIXML) $(HEADER_GLEW)

OF_CORE_FRAMEWORKS = -framework Accelerate -framework AGL -framework AppKit -framework ApplicationServices -framework AudioToolbox -framework AVFoundation -framework Cocoa -framework CoreAudio -framework CoreFoundation -framework CoreMedia -framework CoreServices -framework CoreVideo -framework IOKit -framework OpenGL -framework QuartzCore -framework Security
//-framework AudioToolbox -framework Accelerate -framework AVFoundation -framework CoreAudio -framework CoreGraphics -framework CoreLocation -framework CoreMotion -framework CoreMedia -framework CoreVideo -framework Foundation -framework GameController -framework GLKit -framework MapKit -framework OpenAL -framework OpenGLES -framework UIKit -framework Security -framework QuartzCore -framework CoreHaptics
//


// BOOST can be enabled in OF Core by uncommenting this block
//HEADER_BOOST = "$(OF_PATH)/libs/boost/include"
//LIB_BOOST_SYSTEM = "$(OF_PATH)/libs/boost/lib/osx/boost_system.a"
//LIB_BOOST_FS = "$(OF_PATH)/libs/boost/lib/osx/boost_filesystem.a"
//LIB_BOOST = $(LIB_BOOST_SYSTEM) $(LIB_BOOST_FS)
//OF_CORE_LIBS = $(inherited) $(LIB_BOOST)
//OF_CORE_HEADERS = $(inherited) $(HEADER_BOOST)


ALWAYS_SEARCH_USER_PATHS = NO
DISABLE_MANUAL_TARGET_ORDER_BUILD_WARNING = YES
GCC_PREPROCESSOR_DEFINITIONS = $(inherited) GL_SILENCE_DEPRECATION=1 GLES_SILENCE_DEPRECATION=1 OF_NO_FMOD


//COMPILER SETTINGS WHICH CAN BE OVERRIDDEN BY XCODE BUILD SETTINGS
CLANG_ENABLE_OBJC_WEAK = YES
CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_COMMA = YES
CLANG_WARN_CONSTANT_CONVERSION = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
CLANG_WARN_EMPTY_BODY = YES
CLANG_WARN_ENUM_CONVERSION = YES
CLANG_WARN_INFINITE_RECURSION = YES
CLANG_WARN_INT_CONVERSION = YES
CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES
CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES
CLANG_WARN_OBJC_LITERAL_CONVERSION = YES
CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES
CLANG_WARN_RANGE_LOOP_ANALYSIS = YES
CLANG_WARN_STRICT_PROTOTYPES = YES
CLANG_WARN_SUSPICIOUS_MOVE = YES
CLANG_WARN_UNREACHABLE_CODE = YES
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
GCC_AUTO_VECTORIZATION = YES
GCC_ENABLE_SSE3_EXTENSIONS = YES
GCC_ENABLE_SUPPLEMENTAL_SSE3_INSTRUCTIONS = YES
GCC_GENERATE_DEBUGGING_SYMBOLS = YES
GCC_INLINES_ARE_PRIVATE_EXTERN = NO
GCC_MODEL_TUNING = G5
GCC_MODEL_TUNING = NONE
GCC_NO_COMMON_BLOCKS = YES
GCC_SYMBOLS_PRIVATE_EXTERN = NO
GCC_WARN_64_TO_32_BIT_CONVERSION = NO
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS = YES
GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = NO
GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR
GCC_WARN_ALLOW_INCOMPLETE_PROTOCOL = NO
GCC_WARN_UNDECLARED_SELECTOR = YES
GCC_WARN_UNINITIALIZED_AUTOS = YES
GCC_WARN_UNUSED_FUNCTION = YES
GCC_WARN_UNUSED_VALUE = NO
GCC_WARN_UNUSED_VARIABLE = NO

ENABLE_STRICT_OBJC_MSGSEND = YES
DEAD_CODE_STRIPPING = YES
ONLY_ACTIVE_ARCH = YES
OTHER_CODE_SIGN_FLAGS = --deep
COMBINE_HIDPI_IMAGES = YES
INSTALL_PATH = /Applications
//SDKROOT = macosx
//WRAPPER_EXTENSION = app

SKIP_INSTALL = YES
CONFIGURATION_BUILD_DIR = $(SRCROOT)/bin/

CC = $(OF_PATH)/scripts/osx/cc.sh
CXX = $(OF_PATH)/scripts/osx/cxx.sh
