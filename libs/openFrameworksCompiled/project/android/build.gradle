def ofRoot(){ return '../../../../' }
final ofSource = ofRoot() + 'libs/openFrameworks'
final addons = ofRoot() + 'addons'

// Load common functions
apply from: "common-functions.gradle"


apply plugin: "com.android.model.native"

model {
    android {
        compileSdkVersion 19

        ndk {
            moduleName "openFrameworksLib"
            toolchain  = buildToolchain()
            stl        = compilerStl()
        }

        sources {
            main {
                jni {
                    source {
                        srcDirs =[
                                ofSource,
                                addons+"/ofxAndroid/src",
                                addons+"/ofxAccelerometer/src"
                        ]
                        excludes = [  "**/ofQtUtils.cpp",
                                      "**/ofQuickTimeGrabber.cpp",
                                      "**/ofQuickTimePlayer.cpp",
                                      "**/ofDirectShowGrabber.cpp",
                                      "**/ofDirectShowPlayer.cpp",
                                      "**/ofGstUtils.cpp",
                                      "**/ofGstVideoGrabber.cpp",
                                      "**/ofGstVideoPlayer.cpp",
                                      "**/ofAppGlutWindow.cpp",
                                      "**/ofAppEGLWindow.cpp",
                                      "**/ofAppGLFWWindow.cpp",
                                      "**/ofCairoRenderer.cpp",
                                      "**/ofFmodSoundPlayer.cpp",
                                      "**/ofOpenALSoundPlayer.cpp",
                                      "**/ofRtAudioSoundStream.cpp",

                                      "**/glew/**/*",
                                      "**/poco/include/Poc**/*",
                                      "**/poco/include/CppUni**/*",
                                      "**/poco/include/Poco/**/*",
                                      "**/poco/include/CppUnit/**/*",
                                      "**/quicktime/**/*",
                                      "**/videoInput/**/*",
                                      "**/glu/includ**/*",
                                      "**/fmodex/**/*",
                                      "**/kiss/**/*",
                                      "**/assimp/**/*",
                                      "**/glut/**/*",
                                      "**/portaudio/**/*",
                                      "**/rtAudio/**/*",
                                      "**/poco/lib/**/*",
                                      "**/openssl/lib/**/*",
                                      "**/boost/include/boost/**/*",
                        ]
                    }
                }
            }
        }
    }

    android.productFlavors {
        getAbis().each { abi ->
            create(getFlavorName(abi)) {
                ndk {
                    abiFilters.add(abi)

                    cppFlags.addAll(coreCppFlags(abi, ofRoot()))
                    ldLibs.addAll(coreLdLibs(abi, ofRoot()))
                    ldFlags.addAll(coreLdFlags(abi, ofRoot()))
                    /*getPrebuiltLibPaths(abi, ofRoot).each { path ->
                        ldFlags.add( path.toString())
                    }*/
                }
            }
        }
    }
}
