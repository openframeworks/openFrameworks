# This file will generate values for the following variables:
#
# OS :       The platform's operating system.  
#            Will take the value PLATFORM_OS if already defined.
# ARCH :     The platform's hardware architecture.  
#            Will take the value PLATFORM_ARCH if already defined.
# LIBSPATH : The compiled static library folder name, e.g. linux vs. linux64.  
#            Will take the value PLATFORM_LIBS_PATH if already defined.

ifndef PLATFORM_OS 
    # determine from the uname
    OS=$(shell uname -a)
else 
    # obey the platform override
    OS=$(PLATFORM_OS)
endif 

$(info $(OS))

ifndef PLATFORM_ARCH
    # determine from the uname
    ARCH=$(shell uname -m)
else
    # obey the platform override
    ARCH=$(PLATFORM_ARCH)
endif

ifndef PLATFORM_LIBS_PATH
    # determine from the arch
    ifeq ($(OS),Linux)
        else ifeq ($(ARCH),i386)
            LIBSPATH=linux
        else ifeq ($(ARCH),x86_64)
            LIBSPATH=linux64
        else ifeq ($(ARCH),armv6l)
            LIBSPATH=linuxarmv6l
        else
           $(error This makefile does not support your architecture.)
        endif
    else ifeq ($KERNEL),Darwin)
        else ifeq($(ARCH,i386)
            LIBSPATH=osx
        else ifeq ($(ARCH),x86_64)
            # N.B. 64 bit is not supported on osx 
            # yet, but it should soon!
            # in that case, perhaps the libs will be "fat"
            # i.e. include both 32 and 64 bit library versions.
            LIBSPATH=osx
        else 
           $(error This makefile does not support your architecture.)
        endif
    else
        $(error This makefile does not support your operating system.)
    endif
else
    LIBSPATH=$(PLATFORM_LIBS_PATH)
endif

$(info Building for ARCH=$(ARCH))
$(info Libspath=$(LIBSPATH))
