// once all libraries are compiled for libc++ / all architectures
CLANG_CXX_LIBRARY = libc++
CLANG_ENABLE_OBJC_ARC = YES
CLANG_CXX_LANGUAGE_STANDARD = c++17
TVOS_DEPLOYMENT_TARGET = 13.0


HEADER_OF = "$(OF_PATH)/libs/openFrameworks/**"
HEADER_OFXIOS = "$(OF_PATH)/addons/ofxiOS/**"
HEADER_OFXMULTITOUCH = "$(OF_PATH)/addons/ofxMultiTouch/**"
HEADER_FREETYPE = "$(OF_PATH)/libs/freetype/include"
HEADER_FREETYPE2 = "$(OF_PATH)/libs/freetype/include/freetype2"
HEADER_FMOD = "$(OF_PATH)/libs/fmod/include"
HEADER_GLEW = "$(OF_PATH)/libs/glew/include"
HEADER_FREEIMAGE = "$(OF_PATH)/libs/FreeImage/include"
HEADER_TESS2 = "$(OF_PATH)/libs/tess2/include"
HEADER_RTAUDIO = "$(OF_PATH)/libs/rtaudio/include"
HEADER_UTF8 = "$(OF_PATH)/libs/utf8/include"
HEADER_JSON = "$(OF_PATH)/libs/json/include"
HEADER_GLM = "$(OF_PATH)/libs/glm/include"
HEADER_CURL = "$(OF_PATH)/libs/curl/include"
HEADER_URIPARSER = "$(OF_PATH)/libs/uriparser/include"
HEADER_PUGIXML = "$(OF_PATH)/libs/pugixml/include"

//------- Libraries
LIB_OF = "$(OF_PATH)/libs/openFrameworksCompiled/lib/tvos/libtvOS+OFLib_${CONFIGURATION}.a"
LIB_FREEIMAGE = "$(OF_PATH)/libs/FreeImage/lib/tvos/freeimage.a"
LIB_FREETYPE = "$(OF_PATH)/libs/freetype/lib/tvos/freetype.a"
LIB_TESS = "$(OF_PATH)/libs/tess2/lib/tvos/tess2.a"
LIB_CURL = "$(OF_PATH)/libs/curl/lib/tvos/curl.a"
LIB_URIPARSER = "$(OF_PATH)/libs/uriparser/lib/tvos/uriparser.a"
LIB_PUGIXML = "$(OF_PATH)/libs/pugixml/lib/tvos/pugixml.a"


MISC_FLAGS = "-ObjC"

OF_CORE_LIBS = $(MISC_FLAGS) $(LIB_FREEIMAGE) $(LIB_FREETYPE) $(LIB_OPENSSL) $(LIB_TESS) $(LIB_CURL) $(LIB_URIPARSER) $(LIB_PUGIXML) $(LIB_OF)

OF_CORE_HEADERS = $(HEADER_OF) $(HEADER_OFXIOS) $(HEADER_UTF8) $(HEADER_FREETYPE) $(HEADER_FREETYPE2) $(HEADER_FMOD) $(HEADER_GLEW) $(HEADER_FREEIMAGE) $(HEADER_TESS2) $(HEADER_RTAUDIO) $(HEADER_JSON) $(HEADER_GLM) $(HEADER_CURL) $(HEADER_URIPARSER) $(HEADER_PUGIXML)

OF_CORE_FRAMEWORKS = -framework AudioToolbox -framework Accelerate -framework AVFoundation -framework CoreAudio -framework CoreGraphics -framework CoreLocation -framework CoreMedia -framework CoreVideo -framework Foundation -framework GameController -framework GLKit -framework MapKit -framework OpenAL -framework OpenGLES -framework UIKit -framework Security -framework QuartzCore


// BOOST can be enabled in OF Core by uncommenting this block
//HEADER_BOOST = "$(OF_PATH)/libs/boost/include"
//LIB_BOOST_SYSTEM = "$(OF_PATH)/libs/boost/lib/tvos/boost_system.a"
//LIB_BOOST_FS = "$(OF_PATH)/libs/boost/lib/tvos/boost_filesystem.a"
//LIB_BOOST = $(LIB_BOOST_SYSTEM) $(LIB_BOOST_FS)
//OF_CORE_LIBS = $(inherited) $(LIB_BOOST)
//OF_CORE_HEADERS = $(inherited) $(HEADER_BOOST)


DEAD_CODE_STRIPPING = YES
GCC_AUTO_VECTORIZATION = YES
ENABLE_BITCODE = YES

GCC_ENABLE_SSE3_EXTENSIONS = YES
GCC_ENABLE_SUPPLEMENTAL_SSE3_INSTRUCTIONS = YES
GCC_INLINES_ARE_PRIVATE_EXTERN = NO
GCC_MODEL_TUNING = G5
GCC_SYMBOLS_PRIVATE_EXTERN = NO
GCC_WARN_ALLOW_INCOMPLETE_PROTOCOL = NO
GCC_WARN_UNINITIALIZED_AUTOS = YES
GCC_WARN_UNUSED_VALUE = NO
GCC_WARN_UNUSED_VARIABLE = NO
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS = YES
GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = NO
GCC_WARN_ABOUT_RETURN_TYPE = YES

CONFIGURATION_BUILD_DIR = $(SRCROOT)/bin/

CC = $(OF_PATH)/scripts/osx/cc.sh
CXX = $(OF_PATH)/scripts/osx/cxx.sh
