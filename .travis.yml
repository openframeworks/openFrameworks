language: c++
compiler: gcc
sudo: true
env:
  global:
    - secure: kjz286d6rs2VHpv4WnxAOYXcdTIaTaABZ0SNXf27r5H+NDu5qx8ZSeCmj/9op/sDjTtpkLKhi2a0njUCWwak28RAWP3dNkT92MkUPVKBkevznSxWeqwLHoUos3AJnhPMB+cwrWvmRC+Ljt5K1q8SxQsS/HXM9pzKL3DG3qxM+eo=
  matrix:
    - TARGET="linux"
matrix:
  include:
    # fully specify builds, include can't dynamically expand matrix entries
    # relative order of sudo and env is important so that addons: is recognized
    - os: osx
      compiler: clang
      env: TARGET="osx"
    - os: osx
      compiler: clang
      env: TARGET="ios"
    - os: linux
      sudo: false
      env: TARGET="android" OPT="armv7"
      cache:
        directories:
        - ~/android-ndk-r10e
    - os: linux
      sudo: false
      env: TARGET="android" OPT="x86"
      cache:
        directories:
        - ~/android-ndk-r10e
    - os: linux
      sudo: false
      env: TARGET="docs"
      addons:
        apt:
          packages:
          - python-software-properties
          - doxygen
          - ncftp
  allow_failures:
    # temporary until we find out how to prevent (spurious) build failures
    - env: TARGET="docs"
before_install:
    - if [ "$TARGET" == "docs" ] || [ "$TARGET" == "linux" ]; then
        scripts/ci/$TARGET/before_install.sh;
      fi
install:
    - if [ "$TARGET" == "android" ] || [ "$TARGET" == "linux" ]; then
        scripts/ci/$TARGET/install.sh;
      fi
      # should source before_install.sh so we can export CXX in the linux script.
      # instead, export CXX here, because sourcing messes up Travis log output
      # TODO: remove this when switching to newer Ubuntu with appropriate gcc version.
    - if [ "$TARGET" == "linux" ]; then
        export CXX=g++-4.9;
      fi
script:
    - scripts/ci/$TARGET/build.sh $OPT
    - if [ "$TARGET" == "osx" ] || [ "$TARGET" == "linux" ]; then
        scripts/ci/$TARGET/run_tests.sh;
      fi
after_success:
    # this will only run fully on a commit, not a PR, due to secure above
    if [ "$TARGET" == "docs" ]; then scripts/ci/$TARGET/after_success.sh; fi
git:
    depth: 10
