language: c++
compiler: gcc
sudo: true
env:
  matrix:
    - TARGET="linux"
matrix:
  include:
    # fully specify builds, include can't dynamically expand matrix entries
    # relative order of sudo and env is important so that addons: is recognized
    - os: osx
      compiler: clang
      env: TARGET="osx"
    - os: osx
      compiler: clang
      env: TARGET="ios"
    - os: linux
      sudo: false
      env: TARGET="android" OPT="armv7"
      cache:
        directories:
        - ~/android-ndk-r10e
    - os: linux
      sudo: false
      env: TARGET="android" OPT="x86"
      cache:
        directories:
        - ~/android-ndk-r10e
    - os: linux
      sudo: false
      env:
      - TARGET="docs"
      - secure: kjz286d6rs2VHpv4WnxAOYXcdTIaTaABZ0SNXf27r5H+NDu5qx8ZSeCmj/9op/sDjTtpkLKhi2a0njUCWwak28RAWP3dNkT92MkUPVKBkevznSxWeqwLHoUos3AJnhPMB+cwrWvmRC+Ljt5K1q8SxQsS/HXM9pzKL3DG3qxM+eo=
      addons:
        apt:
          packages:
          - python-software-properties
          - doxygen
          - ncftp
    - os: linux
      sudo: false
      env: TARGET="linux_docker"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - boost-latest
          packages:
          - g++-4.9
          - libboost-filesystem1.55-dev
          - libgtk-3-dev
          - freeglut3-dev
          - libasound2-dev
          - libxmu-dev
          - libxxf86vm-dev
          - libgl1-mesa-dev
          - libglu1-mesa-dev
          - libudev-dev
          - libdrm-dev
          - libglew-dev
          - libopenal-dev
          - libsndfile1-dev
          - libfreeimage-dev
          - libcairo2-dev
          - libfreetype6-dev
          - libssl-dev
          - libpulse-dev
          - libusb-1.0-0-dev
          - libopencv-dev
          - libgstreamer1.0-dev
          - libgstreamer-plugins-base1.0-dev
          - gstreamer1.0-libav
          - gstreamer1.0-pulseaudio
          - gstreamer1.0-x
          - gstreamer1.0-plugins-bad
          - gstreamer1.0-alsa
          - gstreamer1.0-plugins-base
          - gstreamer1.0-plugins-good
          # not whitelisted: libraw1394-dev, libassimp-dev, librtaudio-dev
  allow_failures:
    # temporary until we find out how to prevent (spurious) build failures
    - env:
      - TARGET="docs"
      - secure: kjz286d6rs2VHpv4WnxAOYXcdTIaTaABZ0SNXf27r5H+NDu5qx8ZSeCmj/9op/sDjTtpkLKhi2a0njUCWwak28RAWP3dNkT92MkUPVKBkevznSxWeqwLHoUos3AJnhPMB+cwrWvmRC+Ljt5K1q8SxQsS/HXM9pzKL3DG3qxM+eo=
    - env: TARGET="linux"
before_install:
    - if [ "$TARGET" == "docs" ] || [ "$TARGET" == "linux" ]; then
        scripts/ci/$TARGET/before_install.sh;
      fi
install:
    - if [ "$TARGET" == "android" ] || [ "$TARGET" == "linux" ]; then
        scripts/ci/$TARGET/install.sh;
      fi
      # should source before_install.sh so we can export CXX in the linux script.
      # instead, export CXX here, because sourcing messes up Travis log output
      # TODO: remove this when switching to newer Ubuntu with appropriate gcc version.
    - if [ "$TARGET" == "linux" ]; then
        export CXX=g++-4.9;
      fi
script:
    - scripts/ci/$TARGET/build.sh $OPT
    - if [ "$TARGET" == "osx" ] || [ "$TARGET" == "linux" ] || [ "$TARGET" == "linux_docker" ]; then
        scripts/ci/$TARGET/run_tests.sh;
      fi
after_success:
    # this will only run fully on a commit, not a PR, due to secure above
    if [ "$TARGET" == "docs" ]; then scripts/ci/$TARGET/after_success.sh; fi
git:
    depth: 10
