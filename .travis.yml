language: c++
compiler: gcc
sudo: true
cache: ccache
env:
  global:
    secure: LBTN8d1hS7ocrqDwxLQqU0tfK3FMCXBI8q1yASEjtkp/v5HEyFkbj22H4jXZ20SkpCTlIG2L6i/fU3d6KzJUzTFuxkQEWsnjkj4jAhxGEWRsT1RV6VcUPQDGLHapXwTy+ZYgMNxE7aAdQaBskPHdVzAhjrzlTwVuKp6KjFn+kMU=

matrix:
  include:
  # fully specify builds, include can't dynamically expand matrix entries
  # relative order of sudo and env is important so that addons: is recognized

  - os: linux
    dist: trusty
    sudo: required
    env: TARGET="linux64"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-4.9
          - g++-4.9
          - gdb

  # - os: linux
  #   dist: trusty
  #   sudo: required
  #   env: TARGET="linux64" OPT="qbs"
  #   cache:
  #     directories:
  #       - linuxbrew
  #     timeout: 1800
  #   addons:
  #     apt:
  #       sources:
  #         - ubuntu-toolchain-r-test
  #       packages:
  #         - gcc-4.9
  #         - g++-4.9
  #         - gdb


  - os: linux
    sudo: required
    dist: trusty
    env: TARGET="linuxarmv6l"


  - os: linux
    sudo: required
    dist: trusty
    env: TARGET="linuxarmv7l"
    cache:
      directories:
        - ~/.ccache
        #- ~/rpi2_toolchain
        - ~/firmware-master
        #- ~/archlinux


  - os: linux
    sudo: required
    dist: trusty
    env: TARGET="emscripten"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - libstdc++6

  - os: osx
    osx_image: xcode8
    compiler: clang
    env: TARGET="osx"

  - os: osx
    osx_image: xcode8
    compiler: clang
    env: TARGET="osx" OPT="makefiles"

  - os: osx
    osx_image: xcode8
    compiler: clang
    env: TARGET="ios"

  - os: osx
    osx_image: xcode8
    compiler: clang
    env: TARGET="tvos"

  - os: linux
    language: android
    dist: trusty
    sudo: required
    env: TARGET="android" NDK_DIR="android-ndk-r15c" GRADLE_TARGET="compileArm7DebugSources"
    android:
      components:
        - build-tools-25.0.3
        - android-25
    cache:
      directories:
        - ~/.gradle
        - ~/android-ndk-r15c

  - os: linux
    language: android
    dist: trusty
    sudo: required
    env: TARGET="android" NDK_DIR="android-ndk-r15c" GRADLE_TARGET="compileX86DebugSources"
    android:
      components:
        - build-tools-25.0.3
        - android-25
    cache:
      directories:
        - ~/.gradle
        - ~/android-ndk-r15c


  # Exclude the default build that would otherwise be generated
  # see https://github.com/travis-ci/travis-ci/issues/1228
  exclude:
    - compiler: gcc

install:
  - if [ -f scripts/ci/$TARGET/install.sh ]; then
        scripts/ci/$TARGET/install.sh;
    fi
  - if [ "$TARGET" == "linux64" ]; then
        scripts/linux/download_libs.sh -a 64gcc4;
    elif [ "$TARGET" == "linuxarmv6l" ]; then
        scripts/linux/download_libs.sh -a armv6l;
    elif [ "$TARGET" == "linuxarmv7l" ]; then
        scripts/linux/download_libs.sh -a armv7l;
    elif [ "$TARGET" == "tvos" ]; then
        scripts/ios/download_libs.sh;
    else
        scripts/$TARGET/download_libs.sh;
    fi


script:
  - ccache -z
  - ccache -s
  - if [ "$TARGET" = "linux64" ] || [ "$TARGET" = "linuxarmv6l" ] || [ "$TARGET" = "linuxarmv7l" ]; then
      wget http://mirrors.kernel.org/ubuntu/pool/main/c/ccache/ccache_3.3.4-1_amd64.deb;
      sudo dpkg -i ccache_3.3.4-1_amd64.deb;
    fi
  - if [ "$TARGET" = "osx" ] && [ "$OPT" = "makefiles" ]; then
      scripts/ci/$TARGET/run_tests.sh;
    else
      scripts/ci/$TARGET/build.sh $OPT;
    fi
  - if [ "$TARGET" = "linux64" ]; then
      scripts/ci/$TARGET/run_tests.sh;
    fi
  - if [ "$TARGET" != "osx" ] || [ "$OPT" != "makefiles" ]; then
      scripts/ci/upload_of_lib.sh;
    fi
  - ccache -s

git:
  depth: 10
